import React, { useEffect, useMemo, useState } from "react";

/**
 * Paradise Nursery — Single‑file React app (Landing • Product Listing • Cart)
 *
 * ✅ No external router needed — simple internal page state
 * ✅ Dynamic cart badge in header
 * ✅ Add to cart, increase/decrease qty, remove item
 * ✅ Totals (items + cost) update everywhere
 * ✅ LocalStorage persistence
 * ✅ Three pages: Landing, Products, Cart
 * ✅ Tailwind classes for modern styling
 *
 * How to use (in Vite/CRA/Next sandbox):
 * 1) Drop this file in your project (e.g., src/App.jsx) and set it as the default export.
 * 2) Ensure Tailwind is enabled OR keep as-is (it still looks fine with vanilla CSS fallbacks).
 * 3) Deploy to GitHub Pages, Netlify, or Vercel. Submit your repo + live URL.
 */

/** --------------------------\n * Dummy product catalog
 * -------------------------- */
const PRODUCTS = [
  {
    id: "succ-aloevera",
    name: "Aloe Vera",
    price: 12.0,
    category: "Succulents",
    img: "https://images.unsplash.com/photo-1578926375605-eaf7559b145d?q=80&w=600&auto=format&fit=crop",
  },
  {
    id: "succ-echeveria",
    name: "Echeveria",
    price: 10.0,
    category: "Succulents",
    img: "https://images.unsplash.com/photo-1494633114655-819eb91fde40?q=80&w=600&auto=format&fit=crop",
  },
  {
    id: "trop-monstera",
    name: "Monstera Deliciosa",
    price: 28.0,
    category: "Tropical",
    img: "https://images.unsplash.com/photo-1525104698733-6f52b4c1a05d?q=80&w=600&auto=format&fit=crop",
  },
  {
    id: "trop-snake",
    name: "Snake Plant",
    price: 18.0,
    category: "Tropical",
    img: "https://images.unsplash.com/photo-1501004318641-b39e6451bec6?q=80&w=600&auto=format&fit=crop",
  },
  {
    id: "flow-peace",
    name: "Peace Lily",
    price: 22.0,
    category: "Flowering",
    img: "https://images.unsplash.com/photo-1587300003388-59208cc962cb?q=80&w=600&auto=format&fit=crop",
  },
  {
    id: "flow-orchid",
    name: "Phalaenopsis Orchid",
    price: 35.0,
    category: "Flowering",
    img: "https://images.unsplash.com/photo-1519681393784-d120267933ba?q=80&w=600&auto=format&fit=crop",
  },
  {
    id: "trop-pothos",
    name: "Golden Pothos",
    price: 14.0,
    category: "Tropical",
    img: "https://images.unsplash.com/photo-1598899134739-24f0e4d8e9d0?q=80&w=600&auto=format&fit=crop",
  },
  {
    id: "succ-haworthia",
    name: "Haworthia",
    price: 9.0,
    category: "Succulents",
    img: "https://images.unsplash.com/photo-1524749292158-7540c2494485?q=80&w=600&auto=format&fit=crop",
  },
];

const CATEGORIES = ["All", "Succulents", "Tropical", "Flowering"];

/** --------------------------\n * Small utilities
 * -------------------------- */
const currency = (n) => n.toLocaleString(undefined, { style: "currency", currency: "USD" });

function useLocalStorage(key, initial) {
  const [state, setState] = useState(() => {
    try {
      const raw = localStorage.getItem(key);
      return raw ? JSON.parse(raw) : initial;
    } catch {
      return initial;
    }
  });
  useEffect(() => {
    try {
      localStorage.setItem(key, JSON.stringify(state));
    } catch {}
  }, [key, state]);
  return [state, setState];
}

/** --------------------------\n * Header with dynamic cart badge
 * -------------------------- */
function Header({ page, setPage, cartCount }) {
  return (
    <header className="sticky top-0 z-40 bg-white/80 backdrop-blur border-b border-neutral-200">
      <div className="max-w-6xl mx-auto flex items-center justify-between p-3">
        <button
          className="flex items-center gap-2"
          onClick={() => setPage("landing")}
          aria-label="Paradise Nursery Home"
        >
          <span className="inline-block w-9 h-9 rounded-xl bg-emerald-600" />
          <span className="font-extrabold text-xl tracking-tight">Paradise Nursery</span>
        </button>
        <nav className="flex items-center gap-2">
          {page !== "products" && (
            <button className="nav-btn" onClick={() => setPage("products")}>Shop</button>
          )}
          {page !== "cart" && (
            <button className="nav-btn" onClick={() => setPage("cart")} aria-label="Cart">
              <span className="relative inline-flex items-center">
                {/* cart icon */}
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" className="w-6 h-6">
                  <path fill="currentColor" d="M7 4h-2l-1 2h2l3.6 7.59-1.35 2.45A2 2 0 0 0 10 18h9v-2h-8.42a.25.25 0 0 1-.22-.37L11.1 14h5.45a2 2 0 0 0 1.79-1.11L21 7H7.42l-.7-1.4L6.3 4H7Z"/>
                </svg>
                <span className="ml-2">Cart</span>
                <span className="ml-2 inline-flex items-center justify-center text-xs font-bold min-w-5 h-5 px-1 rounded-full bg-emerald-600 text-white">
                  {cartCount}
                </span>
              </span>
            </button>
          )}
        </nav>
      </div>
      <style>{`
        .nav-btn{ @apply px-3 py-2 rounded-lg border border-neutral-200 hover:bg-neutral-50 active:scale-[.99]; }
      `}</style>
    </header>
  );
}

/** --------------------------\n * Landing page
 * -------------------------- */
function Landing({ onGetStarted }) {
  return (
    <main
      className="min-h-[78vh] grid place-items-center bg-cover bg-center"
      style={{
        backgroundImage:
          "url(https://images.unsplash.com/photo-1545241047-6083f54a7b0d?q=80&w=1600&auto=format&fit=crop)",
      }}
    >
      <section className="backdrop-blur-sm bg-white/75 border border-neutral-200 rounded-2xl p-6 sm:p-10 max-w-2xl text-center shadow-sm">
        <h1 className="text-3xl sm:text-4xl font-extrabold tracking-tight">Paradise Nursery</h1>
        <p className="mt-3 text-neutral-700 leading-relaxed">
          Welcome to your houseplant haven. From resilient succulents to lush tropicals and elegant
          flowering varieties, we source healthy plants and deliver care made simple. Build your
          sanctuary—one plant at a time.
        </p>
        <button className="mt-6 px-5 py-3 rounded-xl bg-emerald-600 text-white font-semibold shadow hover:bg-emerald-700"
                onClick={onGetStarted}>
          Get Started
        </button>
      </section>
    </main>
  );
}

/** --------------------------\n * Product card
 * -------------------------- */
function ProductCard({ product, onAdd }) {
  return (
    <div className="group border border-neutral-200 rounded-xl overflow-hidden bg-white shadow-sm hover:shadow-md transition">
      <img src={product.img} alt={product.name} className="w-full h-40 object-cover" />
      <div className="p-4">
        <h3 className="font-semibold text-lg leading-snug">{product.name}</h3>
        <p className="text-emerald-700 font-bold mt-1">{currency(product.price)}</p>
        <button
          className="mt-3 w-full px-4 py-2 rounded-lg bg-emerald-600 text-white font-medium hover:bg-emerald-700"
          onClick={() => onAdd(product)}
        >
          Add to Cart
        </button>
      </div>
    </div>
  );
}

/** --------------------------\n * Products page with category filter
 * -------------------------- */
function Products({ onAdd, cartCount }) {
  const [active, setActive] = useState("All");
  const filtered = useMemo(
    () => (active === "All" ? PRODUCTS : PRODUCTS.filter((p) => p.category === active)),
    [active]
  );

  return (
    <main className="max-w-6xl mx-auto p-4 sm:p-6">
      <div className="flex flex-col sm:flex-row sm:items-end sm:justify-between gap-4">
        <div>
          <h2 className="text-2xl font-extrabold tracking-tight">Shop Healthy Houseplants</h2>
          <p className="text-neutral-600">Choose a category or browse all. Click any card to add to cart.</p>
        </div>
        <div className="text-sm text-neutral-700">Items in cart: <strong>{cartCount}</strong></div>
      </div>

      <div className="mt-4 flex flex-wrap gap-2">
        {CATEGORIES.map((c) => (
          <button
            key={c}
            onClick={() => setActive(c)}
            className={`px-3 py-1.5 rounded-full border ${
              active === c ? "bg-emerald-600 text-white border-emerald-600" : "border-neutral-300 hover:bg-neutral-50"
            }`}
          >
            {c}
          </button>
        ))}
      </div>

      <div className="mt-6 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
        {filtered.map((p) => (
          <ProductCard key={p.id} product={p} onAdd={onAdd} />)
        )}
      </div>
    </main>
  );
}

/** --------------------------\n * Cart page
 * -------------------------- */
function CartPage({ cart, onInc, onDec, onRemove, onContinue, onCheckout }) {
  const items = Object.values(cart);
  const totalItems = items.reduce((s, it) => s + it.qty, 0);
  const totalCost = items.reduce((s, it) => s + it.qty * it.product.price, 0);

  return (
    <main className="max-w-6xl mx-auto p-4 sm:p-6">
      <h2 className="text-2xl font-extrabold tracking-tight">Your Cart</h2>
      {items.length === 0 ? (
        <div className="mt-6 border border-dashed border-neutral-300 rounded-xl p-8 text-center">
          <p className="text-neutral-700">Your cart is empty.</p>
          <button className="mt-4 px-4 py-2 rounded-lg border hover:bg-neutral-50" onClick={onContinue}>
            Continue Shopping
          </button>
        </div>
      ) : (
        <div className="mt-4 grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* Items */}
          <section className="lg:col-span-2 space-y-3">
            {items.map(({ product, qty }) => (
              <div key={product.id} className="flex items-center gap-4 border border-neutral-200 rounded-xl p-3 bg-white">
                <img src={product.img} alt={product.name} className="w-20 h-20 object-cover rounded-md" />
                <div className="flex-1 min-w-0">
                  <h3 className="font-semibold truncate">{product.name}</h3>
                  <div className="text-sm text-neutral-600">Unit: {currency(product.price)}</div>
                </div>
                <div className="flex items-center gap-2">
                  <button aria-label={`Decrease ${product.name}`} className="px-2 py-1 rounded-lg border" onClick={() => onDec(product.id)}>-</button>
                  <div className="w-9 text-center font-semibold" aria-live="polite">{qty}</div>
                  <button aria-label={`Increase ${product.name}`} className="px-2 py-1 rounded-lg border" onClick={() => onInc(product.id)}>+</button>
                </div>
                <div className="w-24 text-right font-semibold">{currency(qty * product.price)}</div>
                <button aria-label={`Remove ${product.name}`} className="ml-2 px-3 py-2 rounded-lg border hover:bg-red-50" onClick={() => onRemove(product.id)}>
                  Delete
                </button>
              </div>
            ))}
          </section>

          {/* Summary */}
          <aside className="border border-neutral-200 rounded-xl p-4 h-fit bg-white">
            <h3 className="font-bold text-lg">Order Summary</h3>
            <div className="mt-3 space-y-2 text-sm">
              <div className="flex justify-between"><span>Total items</span><strong>{totalItems}</strong></div>
              <div className="flex justify-between"><span>Subtotal</span><strong>{currency(totalCost)}</strong></div>
            </div>
            <div className="mt-4 grid grid-cols-1 gap-2">
              <button className="px-4 py-2 rounded-lg border hover:bg-neutral-50" onClick={onContinue}>Continue Shopping</button>
              <button className="px-4 py-2 rounded-lg bg-emerald-600 text-white font-semibold hover:bg-emerald-700" onClick={onCheckout}>Checkout</button>
            </div>
          </aside>
        </div>
      )}
    </main>
  );
}

/** --------------------------\n * Root App
 * -------------------------- */
export default function ParadiseNurseryApp() {
  const [page, setPage] = useState("landing"); // "landing" | "products" | "cart"
  const [cart, setCart] = useLocalStorage("pn-cart", /** @type {Record<string,{product:any, qty:number}>} */ ({}));

  // derived values
  const cartCount = useMemo(() => Object.values(cart).reduce((s, it) => s + it.qty, 0), [cart]);

  const addToCart = (product) => {
    setCart((c) => {
      const next = { ...c };
      if (!next[product.id]) next[product.id] = { product, qty: 0 };
      next[product.id].qty += 1;
      return next;
    });
  };
  const inc = (id) => setCart((c) => ({ ...c, [id]: { ...c[id], qty: c[id].qty + 1 } }));
  const dec = (id) =>
    setCart((c) => {
      const item = c[id];
      if (!item) return c;
      const qty = Math.max(0, item.qty - 1);
      if (qty === 0) {
        const { [id]: _remove, ...rest } = c;
        return rest;
      }
      return { ...c, [id]: { ...item, qty } };
    });
  const removeItem = (id) => setCart((c) => { const { [id]: _x, ...rest } = c; return rest; });

  const handleCheckout = () => {
    alert("This is a front‑end demo. Hook this button to your checkout provider.");
  };

  return (
    <div className="min-h-screen bg-neutral-50 text-neutral-900">
      <Header page={page} setPage={setPage} cartCount={cartCount} />
      {page === "landing" && <Landing onGetStarted={() => setPage("products")} />}
      {page === "products" && <Products onAdd={addToCart} cartCount={cartCount} />}
      {page === "cart" && (
        <CartPage
          cart={cart}
          onInc={inc}
          onDec={dec}
          onRemove={removeItem}
          onContinue={() => setPage("products")}
          onCheckout={handleCheckout}
        />
      )}
      <Footer />
    </div>
  );
}

function Footer(){
  return (
    <footer className="mt-10 border-t border-neutral-200 py-8 text-center text-sm text-neutral-600">
      <p>
        © {new Date().getFullYear()} Paradise Nursery — Demo store UI for coursework. Images from Unsplash.
      </p>
    </footer>
  )
}
